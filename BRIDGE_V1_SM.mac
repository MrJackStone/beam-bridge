! BRIDGE_V1_SM

!!                                                                                                !!
!!                                                                                                !!
!! 3. SOLID MODEL                                                                                 !!
!!                                                                                                !!
!!                                                                                                !!
/prep7
csys,0
seltol,1e-8

!!                                                                                                !!
!! 3.1 SUPERSTRUCTURE                                                                             !!
!!                                                                                                !!
*if,GEO_deckRadius,eq,0,then
    ! Straight deck:
    BRIDGE_V1_SMTANDECK

*else
    ! Curved deck:
    BRIDGE_V1_SMCRVDECK

*endif

csys,0
wpcsys,-1,0

! Orient slab areas & girder lines
allsel
arzori,1

cmsel,s,COMPL_Girder
ksll,s
lnxori,1

! Create components
allsel
cm,COMPA_Slab,area

cmsel,u,COMPA_LeftFootpath
cmsel,u,COMPA_RightFootpath
cm,COMPA_Lanes,area


!!                                                                                                !!
!! 3.2 MESOSTRUCTURE                                                                              !!
!!                                                                                                !!
! Create frames
ksel , none
lsel , none
cm   , COMPK_FrameGirder , kp
cm   , COMPK_Column      , kp
cm   , COMPK_FrameBottom , kp
cm   , COMPL_FrameGirder , line
cm   , COMPL_Column      , line

*do,nthSupport,1,GEO_supportCount,1

  mesoType=GEO_mesoType(nthSupport)
  *if,mesoType,eq,CTE_MESO_frame,then
    ! Column-girder frame:
    BRIDGE_V1_SMFRAME,nthSupport
  *elseif,mesoType,eq,CTE_MESO_tube,or,mesoType,eq,CTE_MESO_tcolumn,then
    ! Tubular pier column:
    BRIDGE_V1_SMCTUBE, nthSupport
  *elseif,mesoType,eq,CTE_MESO_beamcap,then
    ! Cap-beam frame:
    BRIDGE_V1_SMCAPBEAM, nthSupport
  *endif

*enddo



!!                                                                                                !!
!! 3.3 INFRASTRUCTURE                                                                             !!
!!                                                                                                !!
! Create pile cap and grade beam
ksel,none
lsel,none
CM,COMPK_GradeBeam,KP
CM,COMPL_GradeBeam,LINE
asel,none
CM,COMPA_LeftPileCaps,AREA
CM,COMPA_RightPileCaps,AREA
cm,COMPA_centerPileCaps,area
CM,COMPA_PileCap,AREA

*do,nthSupport,1,GEO_supportCount,1
  mesoType=GEO_mesoType(nthSupport)
  *if,mesoType,ne,CTE_MESO_abutment,and,mesoType,ne,CTE_MESO_beamcap,then
    BRIDGE_V1_SMPCAP,nthSupport
  *endif
*enddo

CMSEL,S,COMPA_PileCap
/uis,MSGPOP,3
ARZORI,1
LSLA,S
KSLL,S
CM,COMPA_PileCap,AREA
CM,COMPL_PileCap,LINE
CM,COMPK_PileCap,KP

! Merge pile caps with columns
CMSEL,S,COMPK_FrameBottom
CMSEL,A,COMPK_PileCap
LSLK,S
ASLL,S
NUMMRG,KP

! Create piles
ksel , none
lsel , none
cm   , COMPK_Pile    , kp
cm   , COMPL_Pile    , line
cm   , COMPK_Support , kp
cm   , COMPK_PileTop , kp

*do,nthSupport,1,GEO_supportCount,1
  lsel,none
  mesoType=GEO_mesoType(nthSupport)
  *if,mesoType,eq,CTE_MESO_beamcap,then
    BRIDGE_V1_SMCBPILE,nthSupport
  *elseif,mesoType,ne,CTE_MESO_abutment,then
    BRIDGE_V1_SMPILE,nthSupport
  *endif
  cm,COMPL_SUP%nthSupport%_piles,line
*enddo

cmsel,s,COMPK_PileTop
cmsel,a,COMPK_Support
lslk,s,1
CM,COMPK_Pile,KP
CM,COMPL_Pile,LINE



!!                                                                                                !!
!! 3.4 ABUTMENTS                                                                                  !!
!!                                                                                                !!
! Initialize selection components
asel,none
lsel,none
ksel,none
cm , COMPA_ABT_appSlab         , area
cm , COMPA_ABT_beam            , area
cm , COMPA_ABT_columns         , area
cm , COMPA_ABT_leftSide        , area
cm , COMPA_ABT_longWalls       , area
cm , COMPA_ABT_pileCap         , area
cm , COMPA_ABT_rightSide       , area
cm , COMPA_ABT_tranWall        , area
cm , COMPA_ABT_thinTranWall    , area
cm , COMPA_ABT_walls           , area
cm , COMPA_ABT_wings           , area
cm , COMPA_Abutment            , area
cm , COMPK_ABT_base            , kp
cm , COMPK_ABT_pileBase        , kp
cm , COMPK_ABT_pileTop         , kp
cm , COMPL_ABT_lwPiles         , line
cm , COMPL_ABT_pileConnections , line
cm , COMPL_ABT_piles           , line
cm , COMPL_ABT_vxPiles         , line
cm , COMPA_ABT_leftOverhang    , area
cm , COMPA_ABT_rightOverhang   , area
cm , COMPA_ABT_overhangs       , area

! First abutment (before X=0)
asel,none
lsel,none
ksel,none
*if,GEO_ABT1_status,eq,1,then
    GEO_ABT1_zAB=GEO_frameTopOffset(1)
    csys,CS_abt1
    *if,GEO_ABT1_type,eq,4,then
      BRIDGE_V1_ABT4,CS_ABT1,'GEO_ABT1_geometry'
      ABT1_angCoef=0
      ABT1_linCoef=0
      CS_ABT1_trv=CS_trvWall
      CS_ABT1_lw=CS_leftWing
      CS_ABT1_rw=CS_rightWing
    *else
      BRIDGE_V1_ABT,CS_ABT1,'GEO_ABT1_geometry',1
      ABT1_angCoef=angCoef
      ABT1_linCoef=linCoef
      CS_ABT1_lw=CS_leftWall
      CS_ABT1_rw=CS_rightWall
    *endif
*endif
cm,COMPA_ABT_1,area
cm,COMPL_ABT_1,line
cm,COMPK_ABT_1,kp
cmsel,r,COMPL_ABT_piles
cm,COMPL_SUP1_piles,line

! Second abutment (after X=L)
asel,none
lsel,none
ksel,none
*if,GEO_ABT2_status,eq,1,then
    GEO_ABT2_zAB=GEO_frameTopOffset(GEO_supportCount)
    csys,CS_abt2
    *if,GEO_ABT2_type,eq,4,then
      BRIDGE_V1_ABT4,CS_ABT2,'GEO_ABT2_geometry'
      ABT2_angCoef=0
      ABT2_linCoef=0
      CS_ABT2_trv=CS_trvWall
      CS_ABT2_lw=CS_leftWing
      CS_ABT2_rw=CS_rightWing
    *else
      BRIDGE_V1_ABT,CS_ABT2,'GEO_ABT2_geometry', 1
      ABT2_angCoef=angCoef
      ABT2_linCoef=linCoef
      CS_ABT2_lw=CS_leftWall
      CS_ABT2_rw=CS_rightWall
    *endif
*endif
cm,COMPA_ABT_2,area
cm,COMPL_ABT_2,line
cm,COMPK_ABT_2,kp
cmsel,r,COMPL_ABT_piles
cm,COMPL_SUP%GEO_supportCount%_piles,line

csys,0

! Footpaths and lanes
asel,none
cm , COMPA_ABT_LeftFootpath  , area
cm , COMPA_ABT_RightFootpath , area
cm , COMPA_ABT_Lanes         , area

*if,GEO_ABT1_appSlab,eq,1,or,GEO_ABT2_appSlab,eq,1,then
    *if,GEO_footpathLeft_beg,gt,0,or,GEO_footpathLeft_end,gt,0,then
        csys,CS_leftFootpath
        cmsel,s,COMPA_ABT_appSlab
        asel,r,loc,y,0,(GEO_footpathLeft_beg>GEO_footpathLeft_end)
        cm,COMPA_ABT_LeftFootpath,area
    *endif

    *if,GEO_footpathRight_beg,gt,0,or,GEO_footpathRight_end,gt,0,then
        csys,CS_rightFootpath
        cmsel,s,COMPA_ABT_appSlab
        asel,r,loc,y,-(GEO_footpathRight_beg>GEO_footpathRight_end),0
        cm,COMPA_ABT_RightFootpath,area
    *endif

    cmsel,s,COMPA_ABT_appSlab
    cmsel,u,COMPA_ABT_LeftFootpath
    cmsel,u,COMPA_ABT_RightFootpath
    cm,COMPA_ABT_Lanes,area
*endif

allsel
*if,GEO_deckRadius,ne,0,then
    kdele,GEO_centerKP
*endif

csys,0
