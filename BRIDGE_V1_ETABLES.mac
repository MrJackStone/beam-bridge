! BRIDGE_V1_ETABLES


! Output element tables:

! Auxiliary: ----------------------------------- 1
! ZEROS

! DOFs: --------------------------------------- 24
! DW_UX     EMN_UX     EMX_UX     EAB_UX
! DW_UY     EMN_UY     EMX_UY     EAB_UY
! DW_UZ     EMN_UZ     EMX_UZ     EAB_UZ
! DW_ROTX   EMN_ROTX   EMX_ROTX   EAB_ROTX
! DW_ROTY   EMN_ROTY   EMX_ROTY   EAB_ROTY
! DW_ROTZ   EMN_ROTZ   EMX_ROTZ   EAB_ROTZ

! SHELL181 (raw): ----------------------------- 28
! DW_MX     EMN_MX     EMX_MX     EAB_MX
! DW_MY     EMN_MY     EMX_MY     EAB_MY
! DW_NX     EMN_NX     EMX_NX     EAB_NX
! DW_NY     EMN_NY     EMX_NY     EAB_NY
! DW_QX     EMN_QX     EMX_QX     EAB_QX
! DW_QY     EMN_QY     EMX_QY     EAB_QY
! DW_Q      -          -          EAB_Q
! -         -          ENEG_MX    -
! -         EPOS_MX    -          -

! SHELL181 (averaged by convolution): -------- 12
! ADW_MX    AEMN_MX    AEMX_MX    AEAB_MX
! ADW_MY    AEMN_MY    AEMX_MY    AEAB_MY
! ADW_Q     -          -          AEAB_Q
! -         -          AENEG_MX   -
! -         AEPOS_MX   -          -

! BEAM188 (raw DW or ENV): ------------------- 50
! DW_Ni     EMN_Ni     EMX_Ni     EAB_Ni
! DW_Nj     EMN_Nj     EMX_Nj     EAB_Nj
! DW_QZi    EMN_QZi    EMX_QZi    EAB_QZi
! DW_QZj    EMN_QZj    EMX_QZj    EAB_QZj
! DW_QYi    EMN_QYi    EMX_QYi    EAB_QYi
! DW_QYj    EMN_QYj    EMX_QYj    EAB_QYj
! DW_MYi    EMN_MYi    EMX_MYi    EAB_MYi
! DW_MYj    EMN_MYj    EMX_MYj    EAB_MYj
! DW_MZi    EMN_MZi    EMX_MZi    EAB_MZi
! DW_MZj    EMN_MZj    EMX_MZj    EAB_MZj
! DW_TQi    EMN_TQi    EMX_TQi    EAB_TQi
! DW_TQj    EMN_TQj    EMX_TQj    EAB_TQj
! N_c  -  axial compression
! N_t  -  axial tension

! BEAM188 (calculated based on DW/ENV): ------- 12
! M_ogk     M_oqk      M_od_geo   M_od_est
! Q_ogk     Q_oqk      Q_od_geo   Q_od_est
! N_cgk     N_cqk      N_cd_geo   N_cd_est
!
! Legend:
!    ?_#gk     -  characteristic value due to dead loads only
!    ?_#qk     -  characteristic value due to live loads only
!    ?_#d_geo  -  design value for geotechnical verifications of piles
!    ?_#d_est  -  design value for structural verifications of piles
!
!    ?: M - bending moment
!       Q - shear force
!       N - axial force
!    #: o - oblique (vector sum, for bending moment & shear force)
!       c - compression (for axial force)

! Service limit state deflections: ------------- 12
! UX_gk     UX_qk     UX_k      UX_frq
! UY_gk     UY_qk     UY_k      UY_frq
! UZ_gk     UZ_qk     UZ_k      UZ_frq
!
! Legend:
!    U?_gk   -  dead loads, characteristic value
!    U?_qk   -  live loads, characteristic value
!    U?_k    -  dead + live loads, characteristic values
!    U?_frq  -  SLS frequent combination (uses PSI1)

! TOTAL element table count: ----------------- 139


/post1

allsel
set,first

! Auxiliary element tables
*vget  , element_numbers       , elem    ,         , elist
*get   , ec                    , elem    ,         , count
etable , 'DUMMY'               , volu
sadd   , 'ZEROS'               , 'DUMMY' , 'DUMMY' , 1     , -1
detab  , element_numbers(1:ec) , 'ZEROS' , 0
etable , 'DUMMY'               , eras


!! Dead weight results (first load step) element tables                                           !!
defa181etabs , 'DW_' , 1e-3
defa188etabs , 'DW_' , 1e-3
defadofetabs , 'DW_' , 1e3

! SHELL181 oblique shear force
etbsqsum , 'DW_Q' , 'DW_QX' , 'DW_QY'

! BEAM188 oblique internal reactions
smax     , 'M_y'   , 'DW_MYi' , 'DW_MYj'
smax     , 'M_z'   , 'DW_MZi' , 'DW_MZj'
etbsqsum , 'M_og'  , 'M_y'    , 'M_z'
sadd     , 'M_ogk' , 'M_og'   ,          , 1/LOAD_gammaG
etable   , 'M_y'   , eras
etable   , 'M_z'   , eras

smax     , 'Q_y'   , 'DW_QYi' , 'DW_QYj'
smax     , 'Q_z'   , 'DW_QZi' , 'DW_QZj'
etbsqsum , 'Q_og'  , 'Q_y'    , 'Q_z'
sadd     , 'Q_ogk' , 'Q_og'   ,          , 1/LOAD_gammaG
etable   , 'Q_y'   , eras
etable   , 'Q_z'   , eras

smin   , 'N_c0'  , 'DW_Ni' , 'DW_Nj'
smin   , 'N_cg'  , 'N_c0'  , 'ZEROS'
etable , 'N_c0'  , eras
sadd   , 'N_cgk' , 'N_cg'  ,         , 1/LOAD_gammaG
! smax   , 'N_t0'  , 'DW_Ni' , 'DW_Nj'
! smax   , 'N_tg'  , 'N_t0'  , 'ZEROS'
! etable , 'N_t0'  , eras


!! Envelope including dead & live loads:                                                          !!
! Calculate envelopes for selected element tables
etableCount = 24

*del , etable_names ,      , nopr
*dim , etable_names , char , etableCount

etable_names(1)  = 'UX' , 'UY' , 'UZ'  , 'ROTX' , 'ROTY' , 'ROTZ'
etable_names(7)  = 'MX' , 'MY' , 'NX'  , 'NY'   , 'QX'   , 'QY'
etable_names(13) = 'Ni' , 'Nj' , 'QZi' , 'QZj'  , 'QYi'  , 'QYj'  , 'MYi' , 'MYj' , 'MZi' , 'MZj' , 'TQi' , 'TQj'

etbenv , 1 , LoadStepCount , 'etable_names' , 'BRIDGE_V1_ETBUPDATE'

*do,nthEtable,1,etableCount,1
  etableName = etable_names(nthEtable)
  etable,'%etableName%',eras
*enddo
*del,etable_names,,nopr

! SHELL181 oblique shear force
etbsqsum , 'EAB_Q' , 'EAB_QX' , 'EAB_QY'

! SHELL181 positive/negative-only bending moments
smax   , 'ENEG_MX' , 'EMX_MX' , 'ZEROS'
smax   , 'EPOS_MX' , 'EMN_MX' , 'ZEROS'  , -1
! smax   , 'ENEG_MY' , 'EMX_MY' , 'ZEROS'
! smax   , 'EPOS_MY' , 'EMN_MY' , 'ZEROS'  , -1

! BEAM188 oblique internal reactions
smax     , 'M_y' , 'EAB_MYi' , 'EAB_MYj'
smax     , 'M_z' , 'EAB_MZi' , 'EAB_MZj'
etbsqsum , 'M_o' , 'M_y'     , 'M_z'
etable   , 'M_y' , eras
etable   , 'M_z' , eras

smax     , 'Q_y' , 'EAB_QYi' , 'EAB_QYj'
smax     , 'Q_z' , 'EAB_QZi' , 'EAB_QZj'
etbsqsum , 'Q_o' , 'Q_y'     , 'Q_z'
etable   , 'Q_y' , eras
etable   , 'Q_z' , eras

! BEAM188 positive/negative-only axial force
smin   , 'N_c0' , 'EMN_Ni' , 'EMN_Nj'
smin   , 'N_c'  , 'N_c0'   , 'ZEROS'
etable , 'N_c0' , eras
smax   , 'N_t0' , 'EMX_Ni' , 'EMX_Nj'
smax   , 'N_t'  , 'N_t0'   , 'ZEROS'
etable , 'N_t0' , eras


!! Element tables calculated based on DW & ENV values                                             !!
! Deflections
sadd   , 'UX_g'   , 'DW_UX'  ,         , 1
sadd   , 'UX_d'   , 'EMN_UX' ,         , 1
sadd   , 'UX_gk'  , 'UX_g'   ,         , 1/LOAD_gammaG
sadd   , 'UX_q'   , 'UX_d'   , 'UX_g'  , 1                              , -1
sadd   , 'UX_qk'  , 'UX_q'   ,         , 1/(LOAD_gammaQ*LOAD_dynImpact)
sadd   , 'UX_k'   , 'UX_g'   , 'UX_q'  , 1                              , 1
sadd   , 'UX_frq' , 'UX_gk'  , 'UX_qk' , 1                              , LOAD_psi1
etable , 'UX_g'   , eras
etable , 'UX_d'   , eras
etable , 'UX_q'   , eras

sadd   , 'UY_g'   , 'DW_UY'  ,         , 1
sadd   , 'UY_d'   , 'EMN_UY' ,         , 1
sadd   , 'UY_gk'  , 'UY_g'   ,         , 1/LOAD_gammaG
sadd   , 'UY_q'   , 'UY_d'   , 'UY_g'  , 1                              , -1
sadd   , 'UY_qk'  , 'UY_q'   ,         , 1/(LOAD_gammaQ*LOAD_dynImpact)
sadd   , 'UY_k'   , 'UY_g'   , 'UY_q'  , 1                              , 1
sadd   , 'UY_frq' , 'UY_gk'  , 'UY_qk' , 1                              , LOAD_psi1
etable , 'UY_g'   , eras
etable , 'UY_d'   , eras
etable , 'UY_q'   , eras

sadd   , 'UZ_g'   , 'DW_UZ'  ,         , 1
sadd   , 'UZ_d'   , 'EMN_UZ' ,         , 1
sadd   , 'UZ_gk'  , 'UZ_g'   ,         , 1/LOAD_gammaG
sadd   , 'UZ_q'   , 'UZ_d'   , 'UZ_g'  , 1                              , -1
sadd   , 'UZ_qk'  , 'UZ_q'   ,         , 1/(LOAD_gammaQ*LOAD_dynImpact)
sadd   , 'UZ_k'   , 'UZ_g'   , 'UZ_q'  , 1                              , 1
sadd   , 'UZ_frq' , 'UZ_gk'  , 'UZ_qk' , 1                              , LOAD_psi1
etable , 'UZ_g'   , eras
etable , 'UZ_d'   , eras
etable , 'UZ_q'   , eras

! Internal reactions on piles (discounting impact coefficient & gammas)
sadd   , 'N_cq'  , 'N_c'   , 'N_cg'  , 1                              , -1
sadd   , 'N_cqk' , 'N_cq'  ,         , 1/(LOAD_gammaQ*LOAD_dynImpact)
sadd   , 'N_ck'  , 'N_cgk' , 'N_cqk' , 1                              , 1
etable , 'N_cq'  , eras
etable , 'N_cg'  , eras

sadd   , 'Q_oq'  , 'Q_o'   , 'Q_og'  , 1                              , -1
sadd   , 'Q_oqk' , 'Q_oq'  ,         , 1/(LOAD_gammaQ*LOAD_dynImpact)
sadd   , 'Q_ok'  , 'Q_ogk' , 'Q_oqk' , 1                              , 1
etable , 'Q_oq'  , eras
etable , 'Q_og'  , eras

sadd   , 'M_oq'  , 'M_o'   , 'M_og'  , 1                              , -1
sadd   , 'M_oqk' , 'M_oq'  ,         , 1/(LOAD_gammaQ*LOAD_dynImpact)
sadd   , 'M_ok'  , 'M_ogk' , 'M_oqk' , 1                              , 1
etable , 'M_oq'  , eras
etable , 'M_og'  , eras

sadd , 'N_cd_geo' , 'N_ck' ,  , 1
sadd , 'M_od_geo' , 'M_ok' ,  , 1
sadd , 'Q_od_geo' , 'Q_ok' ,  , 1

sadd , 'N_cd_est' , 'N_cgk' , 'N_cqk' , LOAD_gammaQ , LOAD_gammaQ
sadd , 'M_od_est' , 'M_ogk' , 'M_oqk' , LOAD_gammaG , LOAD_gammaQ
sadd , 'Q_od_est' , 'Q_ogk' , 'Q_oqk' , LOAD_gammaG , LOAD_gammaQ

etable , 'M_ok' , eras
etable , 'Q_ok' , eras
etable , 'N_ck' , eras
etable , 'M_o'  , eras
etable , 'Q_o'  , eras


!! Average results by performing convolution                                                      !!
convolutionTableCount = 12
*del , convolution_etnames ,      , nopr
*dim , convolution_etnames , char , convolutionTableCount
convolution_etnames(1)  = 'DW_MX'   , 'EMN_MX'  , 'EMX_MX' , 'EAB_MX'
convolution_etnames(5)  = 'DW_MY'   , 'EMN_MY'  , 'EMX_MY' , 'EAB_MY'
convolution_etnames(9)  = 'DW_Q'    , 'EAB_Q'
convolution_etnames(11) = 'EPOS_MX' , 'ENEG_MX'

! Perform spatial averaging in shell envelope element tables
*get,t0,active,,time,wall

*do,nthConv,1,convolutionTableCount,1
  lab = convolution_etnames(nthConv)
  sadd,'A%lab%','%lab%',,1
*enddo

csys,0
cmsel,s,COMPE_ABT_appSlab
nsle,s,active
BRIDGE_V1_ETCONVOLUTE,POST_convolutionRadius

csys,0
cmsel,s,COMPE_slab
nsle,s,active
BRIDGE_V1_ETCONVOLUTE,POST_convolutionRadius

csys,0
cmsel,s,COMPA_ABT_pileCap
esla,s
nsle,s,active
BRIDGE_V1_ETCONVOLUTE,POST_convolutionRadius

csys,ESYS_ABT1_tw
cmsel,s,COMPA_ABT_thinTranWall
cmsel,r,COMPA_ABT_1
esla,s
nsle,s,active
BRIDGE_V1_ETCONVOLUTE,POST_convolutionRadius

csys,ESYS_ABT2_tw
cmsel,s,COMPA_ABT_thinTranWall
cmsel,r,COMPA_ABT_2
esla,s
nsle,s,active
BRIDGE_V1_ETCONVOLUTE,POST_convolutionRadius

ctime,'deltaT',t0
*cfopen,'convolution_elapsed',txt
  *vwrite,deltaT
  ('Elapsed time: ',A8)
*cfclos

allsel
