! BRIDGE_V1_ATTR


!!                                                                                                !!
!!                                                                                                !!
!! 2. PREPARATION                                                                                 !!
!!                                                                                                !!
!!                                                                                                !!
/prep7

! Create results and images directories
mkdirs,1

!!                                                                                                !!
!! 2.0 CONSTANTS                                                                                  !!
!!                                                                                                !!
pi=acos(-1)

! Element size for pile soil springs
FEM_springL = 1

! Element size for abutment springs (soil)
FEM_ABT_springL=0.5*(FEM_ABT_esize**2)

! Soil elastic modulus
MAT_Soil_E=1e10                                                       !! MAT_Soil_E=1e10*FEM_PileELength

! Springs
SEC_VSOIL_area=(MAT_Soil_kv*FEM_springL*FEM_PileELength)/MAT_Soil_E   !! SEC_VSOIL_area=(MAT_Soil_kv*FEM_springL)/MAT_Soil_E
SEC_HSOIL_area=(MAT_Soil_kh*FEM_springL*FEM_PileELength)/MAT_Soil_E  ! TODO  multiply by pile diameter (results in AREA per pile)
SEC_PSOIL_area=(MAT_Soil_kp*FEM_springL)/MAT_Soil_E
SEC_SPRING_k=1E10

! Length of approach slab under which there is no soil support (springs), measured from abutment face
FEM_unsupportedAppSlabLength = 2

POST_convolutionRadius = 0.50
POST_resultsFolder     = 'memo_imgs'


! Mesostructure types
CTE_MESO_frame    = 1
CTE_MESO_tube     = 2
CTE_MESO_beamcap  = 3
CTE_MESO_tcolumn  = 4
CTE_MESO_abutment = 5



!!                                                                                                !!
!! 2.1 ATTRIBUTES                                                                                 !!
!!                                                                                                !!
! Materials
MAT_Girder      = 1
MAT_Slab        = 2
MAT_Column      = 3
MAT_FrameGirder = 4
MAT_GradeBeam   = 5
MAT_PileCap     = 6
MAT_Pile        = 7
MAT_Abutment    = 8
MAT_Approach    = 9
MAT_Soil        = 10
MAT_ABT_Soil    = 11
MAT_Spring      = 12
MAT_Matrix      = 13
MAT_Gerber      = 14
MAT_CrossBeam   = 15
MAT_PileTip     = 16
MAT_PileLat     = 17
MAT_casing      = 18

! Element types
TYPE_BEAM188  = 1
TYPE_SHELL181 = 2
TYPE_LINK180  = 3
TYPE_COMBIN14 = 4
TYPE_MATRIX27 = 5
TYPE_MPC184   = 6
TYPE_MASS21   = 7

! Cross-sections
SEC_GIRDER_num       = 1
SEC_SLAB_num         = 2
SEC_COLUMN_num       = 3
SEC_FRAMEGIRDER_num  = 4
SEC_PILECAP_num      = 5
SEC_GRADEBEAM_num    = 6
SEC_PILE_num         = 7
SEC_VSOIL_num        = 8
SEC_HSOIL_num        = 9
SEC_SPRING_num       = 10
SEC_BEARINGX_num     = 11
SEC_BEARINGY_num     = 12
SEC_BEARINGZ_num     = 13
SEC_FRICTION_num     = 14
SEC_ABT_longWall     = 15
SEC_ABT_tranWall     = 16
SEC_ABT_column       = 17
SEC_ABT_beam         = 18
SEC_ABT_wing         = 19
SEC_ABT_appSlab      = 20
SEC_ABT_pile         = 21
SEC_ABT_pileCap      = 22
REAL_ABT_kv          = 23
REAL_ABT_kh          = 24
SEC_COLWALL          = 25
SEC_COLCAP           = 26
SEC_PSOIL_num        = 27
SEC_GERBER           = 28
SEC_CONSOLE          = 29
SEC_CROSSBEAM        = 30
SEC_ABT_thinTranWall = 31

*del,SEC_GIRDER_nums,,nopr
*dim,SEC_GIRDER_nums,,GEO_girderSectionCount
*vfill,SEC_GIRDER_nums,ramp,32,1

! Coordinate systems
CS_global=11
CS_ABT1=12
CS_ABT2=13
CY_deck=20

!! 2.1.1 MATERIALS                                                                                !!
!!                                                                                                !!

!! 2.1.1.1 GIRDER                                                                                 !!
*if,MAT_Girder_type,EQ,0,THEN
  concrete, MAT_Girder, MAT_Girder_fck, MAT_Girder_dens, MAT_Girder_Poisson,,1
*elseif,MAT_Girder_type,EQ,1,THEN
  MAT_Girder_E=2e11
  steel, MAT_Girder,MAT_Girder_E,,,,,,1 !!
*endif

!! 2.1.1.2 SLAB                                                                                   !!
concrete, MAT_Slab, MAT_Slab_fck, MAT_Slab_dens, MAT_Slab_Poisson,,1
*if,SLAB_longRedCoef,ne,1,and,SLAB_longRedCoef,ne,0,then
  E0   = 4760*sqrt(MAT_Slab_fck*1e-6)*1e6
  EX   = E0*SLAB_longRedCoef
  GXYZ = E0/2.6

  mp , ex , MAT_Slab , EX
  mp , ey , MAT_Slab , E0

  mp , gxy , MAT_Slab , GXYZ
  mp , gyz , MAT_Slab , GXYZ
  mp , gxz , MAT_Slab , GXYZ
*endif

!! 2.1.1.3 COLUMN                                                                                 !!
concrete, MAT_Column,      MAT_Column_fck,      MAT_Column_dens,      MAT_Column_Poisson     ,,1

!! 2.1.1.4 FRAME GIRDER                                                                           !!
concrete, MAT_FrameGirder, MAT_FrameGirder_fck, MAT_FrameGirder_dens, MAT_FrameGirder_Poisson,,1

!! 2.1.1.5 GRADE BEAM                                                                             !!
concrete, MAT_GradeBeam,   MAT_GradeBeam_fck,   MAT_GradeBeam_dens,   MAT_GradeBeam_Poisson  ,,1

!! 2.1.1.6 PILE CAPS                                                                              !!
concrete, MAT_PileCap,     MAT_PileCap_fck,     MAT_PileCap_dens,     MAT_PileCap_Poisson    ,,1

!! 2.1.1.7 PILE                                                                                   !!
concrete, MAT_Pile,        MAT_Pile_fck,        MAT_Pile_dens,        MAT_Pile_Poisson       ,,1

!! 2.1.1.8 ABUTMENT                                                                               !!
concrete, MAT_Abutment,    MAT_Abutment_fck,    MAT_Abutment_dens,    MAT_Abutment_Poisson   ,,1

!! 2.1.1.9 APPROACH SLABS                                                                         !!
concrete, MAT_Approach,    MAT_Approach_fck,    MAT_Approach_dens,    MAT_Approach_Poisson   ,,1

!! 2.1.1.10 GERBER CONNECTION (CANTILEVER + CONSOLE)                                              !!
concrete, MAT_Gerber,      MAT_Gerber_fck,      MAT_Gerber_dens,      MAT_Gerber_Poisson   ,,1

!! 2.1.1.11 SOIL (LATERAL REACTION)                                                               !!
MP,EX,MAT_Soil,MAT_Soil_E
MP,PRXY,MAT_Soil,MAT_Soil_Poisson
*if,MAT_Soil_shadm,ne,0,then
  MAT_Soil_sigScale=pi*(PILE_d/2)*FEM_PileELength/SEC_HSOIL_area
  tb,biso,MAT_Soil
  tbdata,,MAT_Soil_shadm*MAT_Soil_sigScale
*endif

!! 2.1.1.12 SOIL (INSIDE ABUTMENTS)                                                               !!
MAT_ABT_Soil_E=1e9
MP,EX,MAT_ABT_Soil,MAT_ABT_Soil_E
MP,PRXY,MAT_ABT_Soil,MAT_ABT_Soil_Poisson

! Active earth pressure coefficient (Ka) -- FIX: changed to rest coefficient (k0)
*afun,deg
! MAT_ABT_Soil_ka=tan(45-(MAT_ABT_Soil_fi/2))
MAT_ABT_Soil_ka=1-sin(MAT_ABT_Soil_fi)
*afun,rad

!! 2.1.1.13 SOIL (PILE TIP)                                                                       !!
mp , ex   , MAT_PileTip , MAT_Soil_E
mp , prxy , MAT_PileTip , MAT_Soil_Poisson
*if,MAT_SOIL_tipNlim,ne,0,then
  MAT_PileTip_sadm=MAT_SOIL_tipNlim/SEC_PSOIL_area
  tb,biso,MAT_PileTip
  tbdata,,MAT_PileTip_sadm
*endif

!! 2.1.1.14 SOIL (PILE LATERAL FRICTION)                                                          !!
mp , ex   , MAT_PileLat , MAT_Soil_E
mp , prxy , MAT_PileLat , MAT_Soil_Poisson
*if,MAT_SOIL_svadm,ne,0,then
  MAT_PileLat_sigScale=pi*(PILE_d/2)*FEM_PileELength/SEC_VSOIL_area
  tb,biso,MAT_PileLat
  tbdata,,MAT_SOIL_svadm*MAT_PileLat_sigScale
*endif

!! 2.1.1.15 SPRING                                                                                !!
MAT_Spring_E=1e10
MP,EX,MAT_Spring,MAT_Spring_E

!! 2.1.1.16 Bearing & FRICTION (MATRIX27 ELEMENTS)                                               !!
MAT_Matrix_E=1e10
MP,EX,MAT_Matrix,MAT_Matrix_E

!! 2.1.1.17  Pile steel casing                                                                    !!
steel , MAT_casing,MAT_CASING_E,,,,,,1


!! 2.1.2 ELEMENT TYPES                                                                            !!
!!                                                                                                !!
! Girders, columns: BEAM188
ET,TYPE_BEAM188,BEAM188
KEYOPT,TYPE_BEAM188,3,2

! Slab, pile caps: SHELL181
ET,TYPE_SHELL181,SHELL181

! Soil, springs: LINK180
ET,TYPE_LINK180,LINK180

! Springs: COMBIN14
ET,TYPE_COMBIN14,COMBIN14
KEYOPT,TYPE_COMBIN14,1,0
KEYOPT,TYPE_COMBIN14,2,0
KEYOPT,TYPE_COMBIN14,3,0

! Bearing/friction: MATRIX27
ET,TYPE_MATRIX27,MATRIX27
KEYOPT,TYPE_MATRIX27,2,0
KEYOPT,TYPE_MATRIX27,3,4

! Rigid link
et,TYPE_MPC184,184
keyopt,TYPE_MPC184,1,0

! Point mass
et,TYPE_MASS21,21
!
!
!! 2.1.3 CROSS-SECTIONS                                                                           !!
!!                                                                                                !!

!! 2.1.3.1 GIRDER                                                                                 !!
*if,GEO_uniGirderSection,eq,1,then
  *do,nthSection,2,GEO_girderSectionCount,1
    GIRDER_d   (nthSection)   = GIRDER_d   (1)
    GIRDER_bfs (nthSection)   = GIRDER_bfs (1)
    GIRDER_bfi (nthSection)   = GIRDER_bfi (1)
    GIRDER_tfs (nthSection)   = GIRDER_tfs (1)
    GIRDER_tfi (nthSection)   = GIRDER_tfi (1)
    GIRDER_tw  (nthSection)   = GIRDER_tw  (1)
    GIRDER_hs  (nthSection)   = GIRDER_hs  (1)
    GIRDER_hi  (nthSection)   = GIRDER_hi  (1)
    GIRDER_hw  (nthSection)   = GIRDER_hw  (1)
    GIRDER_name(1,nthSection) = GIRDER_name(1,1)
  *enddo
*endif

*do,nthGirderSection,1,GEO_girderSectionCount
  ! Collect section description
  num  = SEC_GIRDER_nums(nthGirderSection)
  bfs  = GIRDER_bfs(nthGirderSection)
  bfi  = GIRDER_bfi(nthGirderSection)
  d    = GIRDER_d(nthGirderSection)
  tfs  = GIRDER_tfs(nthGirderSection)
  tfi  = GIRDER_tfi(nthGirderSection)
  tw   = GIRDER_tw(nthGirderSection)
  hs   = GIRDER_hs(nthGirderSection)
  hi   = GIRDER_hi(nthGirderSection)
  hw   = GIRDER_hw(nthGirderSection)
  name = GIRDER_name(1,nthGirderSection)

  *if,MAT_Girder_type,EQ,0,THEN
    ! Write custom cross-section file
    SEC_GIRDER,bfs,bfi,d,tfs,tfi,tw,hs,hi,hw,name

    ! Update input geometry
    GIRDER_bfs(nthGirderSection) = SEC_GIRDER_VAR_bfs
    GIRDER_bfi(nthGirderSection) = SEC_GIRDER_VAR_bfi
    GIRDER_d  (nthGirderSection) = SEC_GIRDER_VAR_d
    GIRDER_tfs(nthGirderSection) = SEC_GIRDER_VAR_tfs
    GIRDER_tfi(nthGirderSection) = SEC_GIRDER_VAR_tfi
    GIRDER_tw (nthGirderSection) = SEC_GIRDER_VAR_tw
    GIRDER_hs (nthGirderSection) = SEC_GIRDER_VAR_hs
    GIRDER_hi (nthGirderSection) = SEC_GIRDER_VAR_hi
    GIRDER_hw (nthGirderSection) = SEC_GIRDER_VAR_hw

    ! Create cross-section
    sectype,num,beam,mesh,name
    secread,name,sect,,mesh
    secoffset,user,bfi/2,d

  *elseif,MAT_Girder_type,EQ,1,THEN
    ! Create section from database
    CEDISAVS,num,name,2

    ! Update input geometry
    GIRDER_bfs(nthGirderSection) = CEDISAVS_VAR_bf
    GIRDER_bfi(nthGirderSection) = CEDISAVS_VAR_bf
    GIRDER_d  (nthGirderSection) = CEDISAVS_VAR_d
    GIRDER_tfs(nthGirderSection) = CEDISAVS_VAR_tf
    GIRDER_tfi(nthGirderSection) = CEDISAVS_VAR_tf
    GIRDER_tw (nthGirderSection) = CEDISAVS_VAR_tw
    GIRDER_hs (nthGirderSection) = 0
    GIRDER_hi (nthGirderSection) = 0
    GIRDER_hw (nthGirderSection) = CEDISAVS_VAR_d-2*CEDISAVS_VAR_tf

    secoffset,user,,GIRDER_d(nthGirderSection)

  *endif

  *del , num  ,, nopr
  *del , bfs  ,, nopr
  *del , bfi  ,, nopr
  *del , d    ,, nopr
  *del , tfs  ,, nopr
  *del , tfi  ,, nopr
  *del , tw   ,, nopr
  *del , hs   ,, nopr
  *del , hi   ,, nopr
  *del , hw   ,, nopr
  *del , name ,, nopr
*enddo

!! 2.1.3.2 SLAB                                                                                   !!
sectype,SEC_SLAB_num,SHELL,,SLAB_name
secdata,SLAB_t,MAT_Slab
secoffset,user,-(SLAB_t/2)-SLAB_hF

!! 2.1.3.3 CANTILEVER (GERBER CONNECTION)                                                         !!
sectype,SEC_GERBER,beam,rect,'GERBER',2
secdata,GERBER_b,GERBER_h
*if,SEC_offset,eq,1,then
   secoffset,user,,GERBER_h/2
*endif

!! 2.1.3.4 CONSOLE (GERBER CONNECTION)                                                            !!
sectype,SEC_CONSOLE,beam,rect,'CONSOLE',2
secdata,CONSOLE_b,CONSOLE_h
*if,SEC_offset,eq,1,then
   secoffset,user,,CONSOLE_h/2
*endif

!! 2.1.3.5 COLUMNS                                                                                !!
SECTYPE,SEC_COLUMN_num,BEAM,RECT,COLUMN_name,2
SECDATA,COLUMN_cx,COLUMN_cy

!! 2.1.3.6 FRAME GIRDER                                                                           !!
sectype,SEC_FRAMEGIRDER_num,BEAM,RECT,FRAMEGIRDER_name,2
secdata,FRAMEGIRDER_b,FRAMEGIRDER_h
secoffset,USER,,FRAMEGIRDER_h/2

!! 2.1.3.7 Cross beam                                                                             !!
sectype,SEC_CROSSBEAM,beam,rect,'CRSBEAM',2
secdata,CROSSBEAM_b,CROSSBEAM_h
secoffset,user,,CROSSBEAM_h/2

!! 2.1.3.7 PILE CAPS                                                                              !!
SECTYPE,SEC_PILECAP_num,SHELL,,PILECAP_name
SECDATA,PILECAP_h,MAT_PileCap
*if,SEC_offset,EQ,1,THEN
  SECOFFSET,TOP
*endif

!! 2.1.3.8 GRADE BEAM                                                                             !!
SECTYPE,SEC_GRADEBEAM_num,BEAM,RECT,GRADEBEAM_name,2
SECDATA,GRADEBEAM_b,GRADEBEAM_h
*if,SEC_offset,EQ,1,THEN
   SECOFFSET,USER,,GRADEBEAM_h/2
*endif

!! 2.1.3.9 PILES                                                                                  !!
*if,PILE_thk,eq,0,then
  ! Standard concrete pile
  SECTYPE,SEC_PILE_num,BEAM,CSOLID,PILE_name,2
  SECDATA,PILE_d/2
*elseif,PILE_thk,gt,0,then
  ! Concrete pile with permanent steel casing
  sec_ctube , PILE_d , PILE_thk , MAT_pile , MAT_casing ,, 'COMPOSITE_PILE'
  sectype,SEC_PILE_num,beam,mesh,'PILE'
  secread,'COMPOSITE_PILE',sect,,mesh
*endif

!! 2.1.3.10 SOIL: VERTICAL STIFFNESS                                                              !!
R,SEC_VSOIL_num,SEC_VSOIL_area,,0

!! 2.1.3.11 SOIL: HORIZONTAL STIFFNESS                                                            !!
R,SEC_HSOIL_num,SEC_HSOIL_area,,0

!! 2.1.3.12 SOIL: VERTICAL STIFFNESS AT PILE END                                                  !!
R,SEC_PSOIL_num,SEC_PSOIL_area,,-1

!! 2.1.3.13 SPRINGS                                                                               !!
R,SEC_SPRING_num,SEC_SPRING_k

!! 2.1.3.14 BEARING (X)                                                                           !!
! Set stiffness matrix values:
!    C1  =  KX
!    C7  = -KX
!    C58 =  KX
!    Remaining values = 0
KX = FEM_BEARING_kh
KY = 0
KZ = 0
r,SEC_BEARINGX_num,  KX,  0,  0,  0,  0,   0  ! C1  - C6
rmore,              -KX,  0,  0,  0,  0,   0  ! C7  - C12
rmore,               KY,  0,  0,  0,  0,   0  ! C13 - C18
rmore,              -KY,  0,  0,  0,  0,  KZ  ! C19 - C24
rmore,                0,  0,  0,  0,  0, -KZ  ! C25 - C30
rmore,                0,  0,  0,  0,  0,   0  ! C31 - C36
rmore,                0,  0,  0,  0,  0,   0  ! C36 - C42
rmore,                0,  0,  0,  0,  0,   0  ! C43 - C48
rmore,                0,  0,  0,  0,  0,   0  ! C49 - C54
rmore,                0,  0,  0, KX,  0,   0  ! C55 - C60
rmore,                0,  0,  0, KY,  0,   0  ! C61 - C66
rmore,                0,  0, KZ,  0,  0,   0  ! C67 - C72
rmore,                0,  0,  0,  0,  0,   0  ! C73 - C78

!! 2.1.3.14 BEARING (Y)                                                                           !!
! Set stiffness matrix values:
!    C13 =  KY
!    C19 = -KY
!    C64 =  KY
!    Remaining values = 0
KX = 0
KY = FEM_BEARING_kh
KZ = 0
r,SEC_BEARINGY_num,  KX,  0,  0,  0,  0,   0  ! C1  - C6
rmore,              -KX,  0,  0,  0,  0,   0  ! C7  - C12
rmore,               KY,  0,  0,  0,  0,   0  ! C13 - C18
rmore,              -KY,  0,  0,  0,  0,  KZ  ! C19 - C24
rmore,                0,  0,  0,  0,  0, -KZ  ! C25 - C30
rmore,                0,  0,  0,  0,  0,   0  ! C31 - C36
rmore,                0,  0,  0,  0,  0,   0  ! C36 - C42
rmore,                0,  0,  0,  0,  0,   0  ! C43 - C48
rmore,                0,  0,  0,  0,  0,   0  ! C49 - C54
rmore,                0,  0,  0, KX,  0,   0  ! C55 - C60
rmore,                0,  0,  0, KY,  0,   0  ! C61 - C66
rmore,                0,  0, KZ,  0,  0,   0  ! C67 - C72
rmore,                0,  0,  0,  0,  0,   0  ! C73 - C78

!! 2.1.3.14 BEARING (Z)                                                                           !!
! Set stiffness matrix values:
!    C24 =  KZ
!    C30 = -KZ
!    C69 =  KZ
!    Remaining values = 0
KX = 0
KY = 0
KZ = FEM_BEARING_kv
r,SEC_BEARINGZ_num,  KX,  0,  0,  0,  0,   0  ! C1  - C6
rmore,              -KX,  0,  0,  0,  0,   0  ! C7  - C12
rmore,               KY,  0,  0,  0,  0,   0  ! C13 - C18
rmore,              -KY,  0,  0,  0,  0,  KZ  ! C19 - C24
rmore,                0,  0,  0,  0,  0, -KZ  ! C25 - C30
rmore,                0,  0,  0,  0,  0,   0  ! C31 - C36
rmore,                0,  0,  0,  0,  0,   0  ! C36 - C42
rmore,                0,  0,  0,  0,  0,   0  ! C43 - C48
rmore,                0,  0,  0,  0,  0,   0  ! C49 - C54
rmore,                0,  0,  0, KX,  0,   0  ! C55 - C60
rmore,                0,  0,  0, KY,  0,   0  ! C61 - C66
rmore,                0,  0, KZ,  0,  0,   0  ! C67 - C72
rmore,                0,  0,  0,  0,  0,   0  ! C73 - C78

!! 2.1.3.17 GIRDER-SLAB FRICTION                                                                  !!
! Set stiffness matrix values:
!    C1=KX     C19=-KY   C58=KX
!    C7=-KX    C24=KZ    C64=KY
!    C13=KY    C30=-KZ   C69=KZ
!    Remaining values = 0
KX=FEM_Bearing_kh*10
KY=FEM_Bearing_kh
KZ=FEM_Bearing_kv
R,SEC_FRICTION_num,  KX,  0,  0,  0,  0,   0  ! C1  - C6
RMORE,              -KX,  0,  0,  0,  0,   0  ! C7  - C12
RMORE,               KY,  0,  0,  0,  0,   0  ! C13 - C18
RMORE,              -KY,  0,  0,  0,  0,  KZ  ! C19 - C24
RMORE,                0,  0,  0,  0,  0, -KZ  ! C25 - C30
RMORE,                0,  0,  0,  0,  0,   0  ! C31 - C36
RMORE,                0,  0,  0,  0,  0,   0  ! C36 - C42
RMORE,                0,  0,  0,  0,  0,   0  ! C43 - C48
RMORE,                0,  0,  0,  0,  0,   0  ! C49 - C54
RMORE,                0,  0,  0, KX,  0,   0  ! C55 - C60
RMORE,                0,  0,  0, KY,  0,   0  ! C61 - C66
RMORE,                0,  0, KZ,  0,  0,   0  ! C67 - C72
RMORE,                0,  0,  0,  0,  0,   0  ! C73 - C78

! Clean up
*del,kx,,nopr
*del,ky,,nopr
*del,kz,,nopr

!! 2.1.3.18 ABUTMENTS                                                                             !!

! LONGITUDINAL WALLS
sectype,SEC_ABT_longWall,shell,,'ABT_LW'
secdata,SEC_ABT_longWall_t,MAT_Abutment

! TRANSVERSAL WALL (thick)
sectype,SEC_ABT_tranWall,shell,,'ABT_TW'
secdata,SEC_ABT_tranWall_t,MAT_Abutment

! TRANSVERSAL WALL (thin)
sectype,SEC_ABT_thinTranWall,shell,,'ABT_TTW'
secdata,SEC_ABT_thinTranWall_t,MAT_Abutment

! BEAM
sectype,SEC_ABT_beam,shell,,'ABT_BEAM'
secdata,SEC_ABT_beam_W,MAT_Abutment

! COLUMNS
sectype,SEC_ABT_column,shell,,'ABT_COL'
secdata,SEC_ABT_col_W,MAT_Abutment

! WINGS
sectype,SEC_ABT_wing,shell,,'ABT_WING'
secdata,SEC_ABT_wing_t,MAT_Abutment

! APPROACH SLAB
sectype,SEC_ABT_appSlab,shell,,'ABT_SLAB'
secdata,SEC_ABT_appSlab_t,MAT_Approach
secoffset,bot

! PILES
*if,SEC_ABT_PILE_thk,eq,0,then
  ! Standard concrete pile
  sectype,SEC_ABT_pile,beam,csolid,'ABT_PILE',2
  secdata,SEC_ABT_pile_d/2
*elseif,SEC_ABT_PILE_thk,gt,0,then
  ! Concrete pile with permanent steel casing
  sec_ctube , SEC_ABT_PILE_d , SEC_ABT_PILE_thk , MAT_pile , MAT_casing ,, 'COMPOSITE_ABT_PILE'
  sectype,SEC_ABT_pile,beam,mesh,'ABTPILE'
  secread,'COMPOSITE_ABT_PILE',sect,,mesh
*endif

! PILE CAP
sectype,SEC_ABT_pileCap,shell,,'ABT_SLAB'
secdata,SEC_ABT_pileCap_h,MAT_Abutment
secoffset,top

! VERTICAL SOIL SPRINGS
REAL_ABT_kv_area=(MAT_ABT_Soil_kv*FEM_ABT_springL)/MAT_ABT_Soil_E
R,REAL_ABT_kv,REAL_ABT_kv_area,,-1

! HORIZONTAL SOIL SPRINGS
REAL_ABT_kh_area=(MAT_ABT_Soil_kh*FEM_ABT_springL)/MAT_ABT_Soil_E
R,REAL_ABT_kh,REAL_ABT_kh_area,,-1
!
!! 2.1.3.19 TUBULAR COLUMN WALLS                                                                  !!
SECTYPE,SEC_COLWALL,SHELL,,'COLWALL'
SECDATA,COLUMN_tWall,MAT_Column
!
!! 2.1.3.20 TUBULAR COLUMN CAP                                                                    !!
SECTYPE,SEC_COLCAP,SHELL,,'COLCAP'
SECDATA,COLUMN_tCap,MAT_Column
secoffset,top
!
!! 2.1.4 COORDINATE SYSTEMS                                                                       !!
!!                                                                                                !!
BRIDGE_V1_CSYS
